/*
*數據類型
 	程序當中有很多數據, 每個數據都是有相關類型, 不同類型的數據占用空間不同
 	數據類型的作用是指導JVM在運行程序的時候給該數據分配多大的內存空間
*java中的數據類型
		基本數據類型
		引用數據類型
*基本數據類型
	基本數據類型包括四大類八小種:
		第一類: 整數型
			byte,short,int,long
		第二類: 浮點型
			float,double
		第三類: 布林型
			boolean
		第四類: 字符型
			char
*引用數據類型
	類
	接口
	數組
*字符串"abc"不屬於基本數據類型, 屬於"引用數據類型",  字符屬於基本數據類型
	字符串使用雙引號  "abc"
	字符使用單引號       'a'
*八種基本數據類型各所占的空間:
	基本數據類型				佔用空間大小[單位: 字節]
   ------------------------------------
   byte						1
   short					2
   int						4
   long						8
   float					4
   double					8
   boolean					1
   char						2
   
*計算機在任何情況下只能識別二進制. 例如: 1001010100011100011.....
	[現代的計算機底層採用交流電的方式, 接通和斷開兩種狀態, 計算機只識別1或0]
*二進制:
	數據的一種表示形式. 十進制表示滿十進一原則, 二進制表示滿二進一原則
		ex:  十進制
			0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
		 	    二進制
		 	0 1 10 11 100 101 110 111 1000 1001 .....
		 	0 1 2  3   4   5   6   7    8   9
*字節(byte):
	1 byte = 8bit [1個位元組 = 8個位元]  1個位元表示1個二進制位  1/0
 	1 KB = 1024 Byte
 	1 MB = 1024 KB
 	1 GB = 1024 MB
 	1 TB = 1024 GB
 	1 TB = 1024 * 1024 * 1024 *1024 * 8
*整數型當中的byte類型, 占用1個位元組, 所以byte類型的數據占用8個位元, byte類型的取值範圍?
*java中數字類型, 數字有正負之分, 所以在數字的二進制中有一個二進制位會稱為"符號位".
   並且這符號位在所有二進制位的最左邊 , 0表示正數,  1表示負數
 	Byte最大值: 01111111 [0000000010000000  - 1]
*二進制與十進制之間轉換規則
	二進制轉換成十進制
	十進制轉換成二進制
*byte類型最大值: 2的7次方 - 1, 結果是 : 127
*byte類型最小值:  -128[具體怎麼用2進制表示, 這個和原碼, 反碼, 補碼有關]
*byte取值範圍: [-128 ~ 127]
*byte類型可以表示256個不同的數字 [ 256個不同的2進制]
*計算機只認識2進制, 計算機表示文字
	八種基本數據中, byte, short, int ,long, float, double, boolean這七種數據類型表示計算機在表示的時候比較容易, 
	因底層都是數字, 十進制的數字和二進制之間一種固定轉換規則
	但八種數據類型中 char類型表示的是現實世界中的文字, 文字和計算機在二進制之間默認情況下是不存在任何轉換關係
	為了讓計算機可以表示現實世界中的文字, 我們需要進行人為的干涉, 
	需要人負責提前制訂好甚麼文字和二進制之間的對應關係,這種對應關係稱為, 字符編碼	
	機算機最初只支持英文, 最先出現的字符編碼是: ACSII碼
	'a' -> 97 [01100001]
	'A' -> 65 
	'0' -> 48
	
	'a' (解碼)---> 01100001
	 01100001 ---按照ACSII邊碼---> 'a'
	 編碼和解碼的時候採用同一套字典/對照表, 不會出現亂碼
	當解碼和編碼的時候採用不同的字典/對照表, 會出現亂碼
*隨著計算機的發展, 後來出現一種邊碼方式, 國際化標準組織ISO制定
	這種邊碼方式支持西歐語言, 向上兼容ACSII碼, 仍然不支持中文, 這種邊碼方式ISO8859-1, 又被稱為latin-1
*蕤著計算機向亞洲發展, 計算機開始支持中文, 日文 , 韓文等文字,  
	其中支持簡體中文的編碼: GB2312 < GBK < GB18030 
	支持繁體中文:  big5 <大五碼>
	後來出現一種邊碼方式統一全球所有文字, 容量較大,  這種邊碼:  Unicode編碼,  
		Unicode編碼方式有多種具體實現:
			- UTF-8
			- UTF-16
			- UTF-32
			.....
*JAVA語言採用的編碼方式:
	-JAVA語言原代碼採用Unicode編碼方式, 所以標誌符可以寫中文
*現在實際開發中, 一般使用UTF-8編碼方式較多. [  統一編碼方式   ]
*八種基本數據的取值範圍:
	類型				         取值範圍
	byte			[-128 ~ 127]
	short			[-32768 ~ 32767]
	int				[-214748348 ~ 2147483647]
	long			
	float
	double
	boolean			[ture,false]
	char			[0 ~ 65535]
	
	short和char所表示的總數是一樣, 只不過char可以表示更大的正整數. 因為char沒有負數.
	char類型 : 
class 學生 
{
}
 */
public class DataTypeTest {
	public static void main (String[] args) {
		//定義一個char類型的變數,  起名c , 同時賦值字浮'a'
		char c = 'a';
		System.out.println(c);
		
		//一個中文占用兩個位元組, char類型正好是2個位元組
		//所以java中的char類型變數可以存儲一個中文字符
		char x = '國';
		System.out.println(x);
		
		//ab是字符串不能使用單引號括起來
		//char y = 'ab';
		
		//"a"是字符串類型
		//k變數是char類型
		//類型不兼容, 編譯錯誤
		//char k = "a";
		
		//聲明
		char e;
		
		//賦值
		e = 'e';
		System.out.println(e);
		
		//再次賦值
		e = 'f';
		System.out.println(e);
	}
}
