
//定義一個類, 類名:類與對象概念
//類與對象概念是一個類, 代表所有的學生對象, 是一個學生模板
public class 類與對象概念 { //定義一個公開的類,　起名,類與對象概念
	//屬性
	//屬性通常採用變數的方式來定義
	//在類體當中, 方法體之外定義的變數被稱為"成員變數"
	//成員變數沒有賦值, 系統默認賦值: 一切向0看齊
	
	//學號
	int no;
	
	//姓名
	String name;
	
	//性別
	boolean sex;
	
	//年齡
	int age;
	
	//住址
	String address;
	
	//方法
	//方法描述的是對象的動作訊息
	//當前例子就只描述屬性, 不描述方法
/*
 	*面向對象的三大特徵
 		封裝
 		繼承
 		多態
 	
 	所有面向對象的語言都有這三大特徵.
 	
 	採用面向對象的方式開發一個軟體, 生命週期當中: [整個生命週期中貫穿使用OO面向對象方式
 	
 		面向對象的分析: OOA
 		面向對象的設計: OOD
 		面向對象的編程: OOP
 	
 	*類和對象的概念
 		
 		甚麼是類
 			類在現實世界當中是不存在的, 是一個模板, 是一個概念,人類大腦思考抽象的結果
 			類代表了一類事物
 			在現實世界當中, 對象A對象B之間有共同特徵, 進行抽象總結出一個模板,這個模板
 			被稱為類
 		
 		甚麼是對象
 			對象是實際存在的個體, 現實世界當中實際存在
 			
 		描述一下整個軟體開發的過程
 			先觀察現實世界, 從現實世界當中尋找對象
 			尋找了N多個對象後, 發現所有的對象都有共同特徵
 			在大腦中形成了一個模板[類]
 			可以通過java代碼來表述一個類
 			java中有了類的定義
 			然後通過類可以創建對象
 			有了對象後,可以讓對象直接協作起來形成一個系統
 			
 		類--[實例化]-->對象
 		
 		對象又被稱實例
 		
 		對象--[抽象]-->類
 		
 		重點:
 			類描述的是對象的共同特徵
 			共同特徵例如: 身高特徵
 			這個身高特徵在訪問的時候, 必須先創建對象, 通過對象去訪問特徵
 			因為這個特徵具體的某個對象上之後, 值不同 有的身高1.8m, 有的
 			對象身高2.8m
 			
 		一個類主要描述的是 狀態 + 動作
 		狀態訊息: 名字, 身高, 性別, 年齡
 		動作訊息: 吃, 唱歌, 跳舞, 學習
 		
 		狀態--> 一個類的屬性
 		動作--> 一個類的方法
 		
 		類{
 			屬性; //描述對象的狀態訊息
 			方法; //描述對象的動作訊息
 		  }
 	
 		狀態和動作當具體到某個對象上之後,發現最終的結果可能不一樣.
 		對象和對象之間的共同特徵, 但是具體到對象之後有數據的差異
 		
 	*類的定義
 		語法結構:
 			[修飾符列表] class 類名 {
 				屬性;
 				方法;
 			}
 		
 		學生類, 描述所有學生對象的共同特徵:
 			學生對象有哪些狀態訊息:
 				學號 [int]
 				名字 [String]
 				性別 [boolean]
 				年齡	 [int][年齡是一個屬性, 年齡是一個數據, 是數據就應該有數據類型]
 				住址  [String]
 				....
 				
 			學生對象有哪些動作訊息
 				吃飯 
 				睡覺
 				學習
 				玩
 				唱歌
 				跳舞
 				....
 			
 			屬性通常是採用一個變數的形式來完成定義的
 			int age;
 			String name;
 			String address;
 			boolean sex;
 			int no;
 		
 		java語言中包括兩種數據類型:
 			基本數據類型
 			byte
 			short
 			int
 			long
 			float
 			double
 			boolean
 			char
 			
 			引用數據類型
 			String.class SUN提供
 			System.class SUN提供
 			
 			Student.class 自定義
 			User.class	     自定義
 			Product.class 自定義
 			Customer.class自定義
 			....
 			
 			int age = 10;
 			String username = "TzuEn";
 			student s = ???;
 			
 		java語言中所有的class都屬於引用數據類型
 */
}
